service: mi-proyectofinal-aws
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  apiGateway:
    shouldStartNameWithService: true

functions:
  hacerpedido:
    handler: handler.hacerpedido
    events:
      - http:
          method: POST
          path: /hacerpedido
  obtenerpedido:
    handler: handler.obtenerpedido
    events:
      - http:
          method: GET
          path: /obtenerpedido
    iamRoleStatements:
         - Effect: Allow
           Action:
           - s3:PutObject
           - s3:GetObject
         Resource:
        
            - Effect: Allow
            Action:
            - sqs:SendMessage
            Resource:
        
           - Effect: Allow
           Action:
           - ses:SendEmail
           - ses:SendRawEmail
           Resource: "*"

resources:
  Resources:
    Restaurante:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: order-backup-bucket-proyectorestaurante
        LifecycleConfiguration:
          Rules:
            - Id: DeleteAfterTwoDays
              Status: enabled
              ExpirationInDays: 2

  Database1:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: proyectorestaurante
      AllocatedStorage: 20
      DBInstanceClass: db.t2.micro
      Engine: MySQL
      EngineVersion: 5.7
      MasterUsername: admin
      MasterUserPassword: 12345678
      MultiAZ: false
      StorageType: gp2
      PubliclyAccessible: true
      VPCSecurityGroups:
        - sg-0240f2da98f1edf45

  RDSSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: sg-0240f2da98f1edf45
      IpProtocol: tcp
      FromPort: 3306
      ToPort: 3306
      CidrIp: 0.0.0.0/0

  queue-database-1:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: order-queue
      DelaySeconds: 15
      MessageRetentionPeriod: 864000








