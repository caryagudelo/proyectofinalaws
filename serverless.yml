service: mi-proyectofinal-aws

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  apiGateway:
    shouldStartNameWithService: true



functions:
  hacerpedido:
    handler: handler.hacerpedido
    events:
      - http:
          method: POST
          path: /hacerpedido
  obtenerpedido:
    handler: handler.obtenerpedido
    events:
      - http:
          method: GET
          path: /obtenerpedido




// SE CREA EN SERVERLESS DEL BUCKET EN AWS CON LA CONDICION DE BORRAR LOS PEDIDOS CADA DOS DIAS

resources:
  Resources:
    Type: AWS::RDS::Bucket
    Properties:
      BucketName: order-backup-bucket--proyectorestaurante
      LifecycleConfiguration:
        Rules:
          - Id: DeleteAfterrTwoDays
            Status: enabled
            ExpirationInDays: 2


// se crea serverlees de la tabla de bases de datos con motor mysql

  Database-1:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: proyectorestaurante
      AllocatedStorage: 20
      DBInstanceClass: db.t2.micro
      engine: MySQL
      EngineVersion: 5.7
      MasterUsername: admin
      MasterUserPassword: 12345678
      MultiAZ: false
      StorageType: gp2
      PubliclyAccessible: true
      VPCSecurityGroups:
        - sg-0240f2da98f1edf45


  // Regla de seguridad de grupo de seguridad VCP

  RDSSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: sg-0240f2da98f1edf45
      IpProtocol: tcp
      FromPort: 3306
      ToPort: 3306
      CidrIp: 0.0.0.0/0


    //se crea cola con retraso de 15 segundos

  queue-database-1:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: order-queue
      DelaySeconds: 15
      MessageRetentionPeriod: 1274568












